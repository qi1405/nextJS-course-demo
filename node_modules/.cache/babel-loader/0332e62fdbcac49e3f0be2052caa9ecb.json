{"ast":null,"code":"import _slicedToArray from\"C:/Users/dimmy/Desktop/Building a Multi-Page SPA with React Router_practice/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Fragment,useState,useEffect}from\"react\";import{useParams,Route,Routes,Link,useNavigate}from\"react-router-dom\";import Comments from\"../components/comments/Comments\";import HighlightedQuote from\"../components/quotes/HighlightedQuote\";import LoadingSpinner from\"../components/UI/LoadingSpinner\";import useHttp from\"../hooks/use-http\";import{getSingleQuote}from\"../lib/api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuoteDetails=function QuoteDetails(){var navigate=useNavigate();var params=useParams();var _useState=useState(\"Load\"),_useState2=_slicedToArray(_useState,2),loadComments=_useState2[0],setLoadComments=_useState2[1];var quoteId=params.quoteId;var _useHttp=useHttp(getSingleQuote,true),sendRequest=_useHttp.sendRequest,status=_useHttp.status,loadedQuote=_useHttp.data,error=_useHttp.error;useEffect(function(){sendRequest(quoteId);},[sendRequest,quoteId]);if(status==='pending'){return/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});};if(error){return/*#__PURE__*/_jsx(\"p\",{className:\"centered\",children:error});}if(!loadedQuote.text){return/*#__PURE__*/_jsx(\"p\",{children:\"No quote found!\"});}var changeAddressHandler=function changeAddressHandler(){if(loadComments===\"Load\"){navigate(\"/quotes/\".concat(params.quoteId,\"/comments\"));setLoadComments(\"Hide\");}else{navigate(\"/quotes/\".concat(params.quoteId));setLoadComments(\"Load\");}};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(HighlightedQuote,{text:loadedQuote.text,author:loadedQuote.author}),/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn--flat\",onClick:changeAddressHandler,children:[loadComments,\" Comments\"]})}),/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsx(Route,{path:\"comments\",element:/*#__PURE__*/_jsx(Comments,{})})})]});};export default QuoteDetails;","map":{"version":3,"sources":["C:/Users/dimmy/Desktop/Building a Multi-Page SPA with React Router_practice/src/pages/QuoteDetail.js"],"names":["Fragment","useState","useEffect","useParams","Route","Routes","Link","useNavigate","Comments","HighlightedQuote","LoadingSpinner","useHttp","getSingleQuote","QuoteDetails","navigate","params","loadComments","setLoadComments","quoteId","sendRequest","status","loadedQuote","data","error","text","changeAddressHandler","author"],"mappings":"iKAAA,OAASA,QAAT,CAAmBC,QAAnB,CAA6BC,SAA7B,KAA8C,OAA9C,CACA,OAASC,SAAT,CAAoBC,KAApB,CAA2BC,MAA3B,CAAmCC,IAAnC,CAAyCC,WAAzC,KAA4D,kBAA5D,CACA,MAAOC,CAAAA,QAAP,KAAqB,iCAArB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,uCAA7B,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,cAAT,KAA+B,YAA/B,C,wFAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,MAAM,CAAGZ,SAAS,EAAxB,CACA,cAAwCF,QAAQ,CAAC,MAAD,CAAhD,wCAAOe,YAAP,eAAqBC,eAArB,eAEA,GAAQC,CAAAA,OAAR,CAAoBH,MAApB,CAAQG,OAAR,CAEA,aAAwDP,OAAO,CAACC,cAAD,CAAiB,IAAjB,CAA/D,CAAOO,WAAP,UAAOA,WAAP,CAAoBC,MAApB,UAAoBA,MAApB,CAAkCC,WAAlC,UAA4BC,IAA5B,CAA+CC,KAA/C,UAA+CA,KAA/C,CAEArB,SAAS,CAAC,UAAM,CACZiB,WAAW,CAACD,OAAD,CAAX,CACH,CAFQ,CAEN,CAACC,WAAD,CAAcD,OAAd,CAFM,CAAT,CAIA,GAAGE,MAAM,GAAK,SAAd,CAAyB,CACrB,mBACI,YAAK,SAAS,CAAC,UAAf,uBACI,KAAC,cAAD,IADJ,EADJ,CAKH,EAED,GAAIG,KAAJ,CAAW,CACP,mBAAO,UAAG,SAAS,CAAC,UAAb,UAAyBA,KAAzB,EAAP,CACH,CAED,GAAI,CAACF,WAAW,CAACG,IAAjB,CAAuB,CACrB,mBAAO,sCAAP,CACD,CAED,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,GAAIT,YAAY,GAAK,MAArB,CAA6B,CAC3BF,QAAQ,mBAAYC,MAAM,CAACG,OAAnB,cAAR,CACAD,eAAe,CAAC,MAAD,CAAf,CACD,CAHD,IAGO,CACLH,QAAQ,mBAAYC,MAAM,CAACG,OAAnB,EAAR,CACAD,eAAe,CAAC,MAAD,CAAf,CACD,CACF,CARD,CAUA,mBACE,MAAC,QAAD,yBACE,KAAC,gBAAD,EAAkB,IAAI,CAAEI,WAAW,CAACG,IAApC,CAA0C,MAAM,CAAEH,WAAW,CAACK,MAA9D,EADF,cAEE,YAAK,SAAS,CAAC,UAAf,uBACE,gBAAQ,SAAS,CAAC,WAAlB,CAA8B,OAAO,CAAED,oBAAvC,WACGT,YADH,eADF,EAFF,cAOE,KAAC,MAAD,wBACE,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,cAAE,KAAC,QAAD,IAAhC,EADF,EAPF,GADF,CAaD,CApDD,CAsDA,cAAeH,CAAAA,YAAf","sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\nimport { useParams, Route, Routes, Link, useNavigate } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\n\r\nconst QuoteDetails = () => {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const [loadComments, setLoadComments] = useState(\"Load\");\r\n\r\n  const { quoteId } = params;\r\n\r\n  const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n      sendRequest(quoteId)\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if(status === 'pending') {\r\n      return (\r\n          <div className=\"centered\">\r\n              <LoadingSpinner />\r\n          </div>\r\n      )\r\n  };\r\n\r\n  if (error) {\r\n      return <p className=\"centered\">{error}</p>\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  const changeAddressHandler = () => {\r\n    if (loadComments === \"Load\") {\r\n      navigate(`/quotes/${params.quoteId}/comments`);\r\n      setLoadComments(\"Hide\");\r\n    } else {\r\n      navigate(`/quotes/${params.quoteId}`);\r\n      setLoadComments(\"Load\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <div className=\"centered\">\r\n        <button className=\"btn--flat\" onClick={changeAddressHandler}>\r\n          {loadComments} Comments\r\n        </button>\r\n      </div>\r\n      <Routes>\r\n        <Route path=\"comments\" element={<Comments />} />\r\n      </Routes>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetails;\r\n"]},"metadata":{},"sourceType":"module"}