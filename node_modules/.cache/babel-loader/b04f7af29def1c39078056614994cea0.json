{"ast":null,"code":"import{useEffect}from\"react\";import QuoteForm from\"../components/quotes/QuoteForm\";import{useNavigate}from\"react-router-dom\";import useHttp from\"../hooks/use-http\";import{addQuote}from\"../lib/api\";import{jsx as _jsx}from\"react/jsx-runtime\";var NewQuote=function NewQuote(){var _useHttp=useHttp(addQuote),sendRequest=_useHttp.sendRequest,status=_useHttp.status;var navigate=useNavigate();useEffect(function(){if(status==='completed'){navigate('/quotes');}},[status,navigate]);var addQuoteHandler=function addQuoteHandler(quoteData){sendRequest(quoteData);};return/*#__PURE__*/_jsx(QuoteForm,{isLoading:status==='pending',onAddQuote:addQuoteHandler});};export default NewQuote;","map":{"version":3,"sources":["C:/Users/dimmy/Desktop/Building a Multi-Page SPA with React Router_practice/src/pages/NewQuote.js"],"names":["useEffect","QuoteForm","useNavigate","useHttp","addQuote","NewQuote","sendRequest","status","navigate","addQuoteHandler","quoteData"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,QAAT,KAAyB,YAAzB,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,aAAgCF,OAAO,CAACC,QAAD,CAAvC,CAAQE,WAAR,UAAQA,WAAR,CAAqBC,MAArB,UAAqBA,MAArB,CACA,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CAEAF,SAAS,CAAC,UAAM,CACZ,GAAIO,MAAM,GAAK,WAAf,CAA4B,CACxBC,QAAQ,CAAC,SAAD,CAAR,CACH,CACJ,CAJQ,CAIN,CAACD,MAAD,CAASC,QAAT,CAJM,CAAT,CAMA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,SAAD,CAAe,CACrCJ,WAAW,CAACI,SAAD,CAAX,CACD,CAFD,CAIA,mBAAO,KAAC,SAAD,EAAW,SAAS,CAAEH,MAAM,GAAK,SAAjC,CAA4C,UAAU,CAAEE,eAAxD,EAAP,CACD,CAfD,CAiBA,cAAeJ,CAAAA,QAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n      if (status === 'completed') {\r\n          navigate('/quotes')\r\n      }\r\n  }, [status, navigate])\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />;\r\n};\r\n\r\nexport default NewQuote;\r\n"]},"metadata":{},"sourceType":"module"}