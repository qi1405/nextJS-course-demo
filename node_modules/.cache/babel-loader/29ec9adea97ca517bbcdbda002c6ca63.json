{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimmy\\\\Desktop\\\\Adding Authentication To React Apps\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef();\n  const passInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passInputRef.current.value; // optional: add validation\n\n    if (isLogin) {} else {\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDvJyIw5dv-0K5OeTO7ZTJxJfK41OfsAkI', {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Contetn-Type': 'application-json'\n        }\n      }).then(res => {\n        if (res.ok) {//...\n        } else {\n          res.json().then(data => {\n            // show an error modal\n            console.log(data);\n          });\n        }\n      });\n    }\n\n    ;\n\n    const switchAuthModeHandler = () => {\n      setIsLogin(prevState => !prevState);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.auth,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            ref: emailInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: passInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: isLogin ? 'Login' : 'Create Account'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: classes.toggle,\n            onClick: switchAuthModeHandler,\n            children: isLogin ? 'Create new account' : 'Login with existing account'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this);\n  };\n};\n\n_s(AuthForm, \"8rhYLAHcS26ubcxksGsUWvd0lcc=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/dimmy/Desktop/Adding Authentication To React Apps/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","isLogin","setIsLogin","emailInputRef","passInputRef","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","console","log","switchAuthModeHandler","prevState","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef();\n  const passInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passInputRef.current.value\n\n    // optional: add validation\n\n    if (isLogin) {\n\n    } else {\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDvJyIw5dv-0K5OeTO7ZTJxJfK41OfsAkI', \n      {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true \n        }),\n        headers: {\n          'Contetn-Type': 'application-json'\n        }\n      }\n      ).then(res => {\n      if (res.ok) {\n        //...\n      } else {\n        res.json().then(data => {\n          // show an error modal\n          console.log(data);\n        })\n      }\n    })\n  };\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passInputRef}/>\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n}\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}