{"ast":null,"code":"import QuoteList from\"../components/quotes/QuoteList\";import useHttp from\"../hooks/use-http\";import{getAllQuotes}from\"../lib/api\";import{useEffect}from\"react\";import LoadingSpinner from\"../components/UI/LoadingSpinner\";import NoQuotesFound from'../components/quotes/NoQuotesFound';import{jsx as _jsx}from\"react/jsx-runtime\";var AllQuotes=function AllQuotes(){var _useHttp=useHttp(getAllQuotes,true),sendRequest=_useHttp.sendRequest,status=_useHttp.status,loadedQuotes=_useHttp.data,error=_useHttp.error;useEffect(function(){sendRequest();},[sendRequest]);if(status==='pending'){return/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});};if(error){return/*#__PURE__*/_jsx(\"p\",{className:\"centered focused\",children:error});};if(status==='completed'&&(!loadedQuotes||loadedQuotes.length===0)){return/*#__PURE__*/_jsx(NoQuotesFound,{});}return/*#__PURE__*/_jsx(QuoteList,{quotes:loadedQuotes});};export default AllQuotes;","map":{"version":3,"sources":["C:/Users/dimmy/Desktop/Building a Multi-Page SPA with React Router_practice/src/pages/AllQuotes.js"],"names":["QuoteList","useHttp","getAllQuotes","useEffect","LoadingSpinner","NoQuotesFound","AllQuotes","sendRequest","status","loadedQuotes","data","error","length"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,gCAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,YAAT,KAA6B,YAA7B,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,oCAA1B,C,2CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,aAKIL,OAAO,CAACC,YAAD,CAAe,IAAf,CALX,CACEK,WADF,UACEA,WADF,CAEEC,MAFF,UAEEA,MAFF,CAGQC,YAHR,UAGEC,IAHF,CAIEC,KAJF,UAIEA,KAJF,CAOAR,SAAS,CAAC,UAAM,CACZI,WAAW,GACd,CAFQ,CAEN,CAACA,WAAD,CAFM,CAAT,CAIA,GAAIC,MAAM,GAAK,SAAf,CAA0B,CACtB,mBACI,YAAK,SAAS,CAAC,UAAf,uBACI,KAAC,cAAD,IADJ,EADJ,CAKH,EAED,GAAIG,KAAJ,CAAW,CACP,mBAAO,UAAG,SAAS,CAAC,kBAAb,UAAiCA,KAAjC,EAAP,CACH,EAED,GAAIH,MAAM,GAAK,WAAX,GAA2B,CAACC,YAAD,EAAiBA,YAAY,CAACG,MAAb,GAAwB,CAApE,CAAJ,CAA4E,CACxE,mBAAO,KAAC,aAAD,IAAP,CACH,CAED,mBAAO,KAAC,SAAD,EAAW,MAAM,CAAEH,YAAnB,EAAP,CACD,CA7BD,CA+BA,cAAeH,CAAAA,SAAf","sourcesContent":["import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\r\n\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n      sendRequest()\r\n  }, [sendRequest]);\r\n\r\n  if (status === 'pending') {\r\n      return (\r\n          <div className=\"centered\">\r\n              <LoadingSpinner />\r\n          </div>\r\n      )\r\n  };\r\n\r\n  if (error) {\r\n      return <p className=\"centered focused\">{error}</p>\r\n  };\r\n\r\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n      return <NoQuotesFound />\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n"]},"metadata":{},"sourceType":"module"}