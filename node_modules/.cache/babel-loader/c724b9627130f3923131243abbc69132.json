{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimmy\\\\Desktop\\\\Building a Multi-Page SPA with React Router_practice\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport { useParams, Route, Routes, Link } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Dim\",\n  text: \"Learning React is fun\"\n}, {\n  id: \"q2\",\n  author: \"Iza\",\n  text: \"Learning React is not fun\"\n}];\n\nconst QuoteDetails = () => {\n  _s();\n\n  const params = useParams();\n  const [loadComments, setLoadComments] = useState('Load');\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn--flat\",\n        to: `/quotes/${params.quoteId}/comments`,\n        children: [loadComments, \" Comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"comments\",\n        element: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetails, \"r9AMWi1LgPNJaTYSq5dliOiIh6o=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["C:/Users/dimmy/Desktop/Building a Multi-Page SPA with React Router_practice/src/pages/QuoteDetail.js"],"names":["Fragment","useState","useParams","Route","Routes","Link","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetails","params","loadComments","setLoadComments","quote","find","quoteId"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,IAAnC,QAA+C,kBAA/C;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CAFmB,CAArB;;AAKA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,MAAD,CAAhD;AAEA,QAAMe,KAAK,GAAGR,YAAY,CAACS,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACP,EAAN,KAAaI,MAAM,CAACK,OAAjD,CAAd;;AAEA,MAAI,CAACF,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACL,IAA9B;AAAoC,MAAA,MAAM,EAAEK,KAAK,CAACN;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,EAAE,EAAG,WAAUG,MAAM,CAACK,OAAQ,WAA1D;AAAA,mBACGJ,YADH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvBD;;GAAMF,Y;UACWV,S;;;KADXU,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import { Fragment, useState } from \"react\";\r\nimport { useParams, Route, Routes, Link } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Dim\", text: \"Learning React is fun\" },\r\n  { id: \"q2\", author: \"Iza\", text: \"Learning React is not fun\" },\r\n];\r\n\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const [loadComments, setLoadComments] = useState('Load')\r\n\r\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n\r\n  if (!quote) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />\r\n      <div className=\"centered\">\r\n        <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>\r\n          {loadComments} Comments\r\n        </Link>\r\n      </div>\r\n      <Routes>\r\n        <Route path=\"comments\" element={<Comments />} />\r\n      </Routes>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetails;\r\n"]},"metadata":{},"sourceType":"module"}