{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimmy\\\\Desktop\\\\Adding Authentication To React Apps\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const stredExpirationDate = localStorage.getItem('expirationTime');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 60000) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"w4PGjzwU+znkNWWv/cmJxDZqQPE=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/dimmy/Desktop/Adding Authentication To React Apps/src/store/auth-context.js"],"names":["React","useState","useEffect","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","stredExpirationDate","remainingTime","storedExpirationDate","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","contextValue","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n    const remainingDuration = adjExpirationTime - currentTime;\r\n\r\n    return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = localStorage.getItem('token')\r\n    const stredExpirationDate = localStorage.getItem('expirationTime');\r\n\r\n    const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n\r\n    if (remainingTime <= 60000) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        token: storedToken,\r\n        duration: remainingTime\r\n    };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const tokenData = retrieveStoredToken();\r\n    let initialToken;\r\n    if (tokenData) {\r\n        initialToken = tokenData.token;\r\n    }\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n\r\n    if (logoutTimer) {\r\n        clearTimeout(logoutTimer);\r\n    }\r\n  };\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem('expirationTime', expirationTime);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n      if (tokenData) {\r\n        logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n      }\r\n  }, [tokenData])\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}