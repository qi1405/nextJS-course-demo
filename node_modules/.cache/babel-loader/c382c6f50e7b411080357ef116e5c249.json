{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimmy\\\\Desktop\\\\Adding Authentication To React Apps\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef();\n  const passInputRef = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passInputRef.current.value; // optional: add validation\n\n    setIsLoading(true);\n\n    if (isLogin) {} else {\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDvJyIw5dv-0K5OeTO7ZTJxJfK41OfsAkI\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {// \"Contetn-Type\": \"application-json\",\n        }\n      }).then(res => {\n        setIsLoading(false);\n\n        if (res.ok) {//...\n        } else {\n          res.json().then(data => {\n            // show an error modal\n            console.log(data);\n            let errorMessage = 'Authentication failed!';\n\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"Jr+sIOIoMRFaGs/6Jf9Tea0h1Kw=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/dimmy/Desktop/Adding Authentication To React Apps/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","isLogin","setIsLogin","emailInputRef","passInputRef","isLoading","setIsLoading","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","console","log","errorMessage","error","message","alert","switchAuthModeHandler","prevState","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef();\n  const passInputRef = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passInputRef.current.value;\n\n    // optional: add validation\n    setIsLoading(true);\n    if (isLogin) {\n    } else {\n      fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDvJyIw5dv-0K5OeTO7ZTJxJfK41OfsAkI\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: {\n            // \"Contetn-Type\": \"application-json\",\n          },\n        }\n      ).then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          //...\n        } else {\n          res.json().then((data) => {\n            // show an error modal\n            console.log(data);\n            let errorMessage = 'Authentication failed!';\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;}\n              alert(errorMessage)\n          });\n        }\n      });\n    }\n  };\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input type=\"password\" id=\"password\" required ref={passInputRef} />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? \"Login\" : \"Create Account\"}</button>}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}